var searchIndex = {};
searchIndex["mrusty"] = {"doc":"# mrusty. mruby safe bindings for Rust","items":[[3,"Mruby","mrusty","A safe `struct` for the mruby API. The `struct` only contains creation and desctruction\nmethods. Creating an `Mruby` returns a `MrubyType` (`Rc&lt;RefCell&lt;Mruby&gt;&gt;`) which implements\n`MrubyImpl` where the rest of the implemented API is found.",null,null],[12,"mrb","","",0,null],[3,"Value","","A `struct` that wraps around any mruby variable.",null,null],[3,"Repl","","A `struct` that exposes an `Mruby` to a REPL.",null,null],[3,"Spec","","A `struct` useful for mruby spec definition and running.",null,null],[3,"GnuReadLine","","A `struct` that implements `ReadLine` with very basic gnureadline functionality.\nRequires `gnu-readline` build feature.",null,null],[4,"MrubyError","","An `enum` containing all possbile types of errors.",null,null],[13,"Cast","","type cast error",1,null],[13,"Undef","","undefined type error",1,null],[13,"Runtime","","mruby runtime error",1,null],[13,"Filetype","","unrecognized file type error",1,null],[13,"Io","","Rust `Io` error",1,null],[11,"new","","Creates an mruby state and context stored in a `MrubyType` (`Rc&lt;RefCell&lt;Mruby&gt;&gt;`).",0,{"inputs":[],"output":{"name":"mrubytype"}}],[11,"fmt","","",1,{"inputs":[{"name":"mrubyerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"mrubyerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"mrubyerror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"mrubyerror"}}],[11,"drop","","",0,{"inputs":[{"name":"mruby"}],"output":null}],[11,"init","","Initializes the `self` mruby object passed to `initialize` with a Rust object of type `T`.",2,{"inputs":[{"name":"value"},{"name":"t"}],"output":{"name":"value"}}],[11,"call","","Calls method `name` on a `Value` passing `args`.",2,{"inputs":[{"name":"value"},{"name":"str"},{"name":"vec"}],"output":{"name":"result"}}],[11,"call_unchecked","","Calls method `name` on a `Value` passing `args`. If call fails, mruby will be left to\nhandle the exception.",2,{"inputs":[{"name":"value"},{"name":"str"},{"name":"vec"}],"output":{"name":"value"}}],[11,"type_name","","Returns the name of the mruby `Class` as a `&amp;str`.",2,{"inputs":[{"name":"value"}],"output":{"name":"str"}}],[11,"to_bool","","Casts a `Value` and returns a `bool` in an `Ok` or an `Err` if the types mismatch.",2,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"to_i32","","Casts a `Value` and returns an `i32` in an `Ok` or an `Err` if the types mismatch.",2,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"to_f64","","Casts a `Value` and returns an `f64` in an `Ok` or an `Err` if the types mismatch.",2,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"to_str","","Casts a `Value` and returns a `&amp;str` in an `Ok` or an `Err` if the types mismatch.",2,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"to_obj","","Casts mruby `Value` of `Class` `name` to Rust type `Rc&lt;T&gt;`.",2,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"to_option","","Casts mruby `Value` of `Class` `name` to Rust `Option` of `Rc&lt;T&gt;`.",2,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"to_vec","","Casts mruby `Value` of `Class` `Array` to Rust type `Vec&lt;Value&gt;`.",2,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"eq","","",2,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",3,{"inputs":[{"name":"gnureadline"},{"name":"str"}],"output":{"name":"result"}}],[11,"add","","",3,{"inputs":[{"name":"gnureadline"},{"name":"str"}],"output":null}],[11,"drop","","",3,{"inputs":[{"name":"gnureadline"}],"output":null}],[11,"new","","Creates an mruby spec runner.",4,{"inputs":[{"name":"mrubytype"},{"name":"str"},{"name":"str"}],"output":{"name":"spec"}}],[11,"run","","Runs mruby specs.",4,{"inputs":[{"name":"spec"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Repl`.",5,{"inputs":[{"name":"mrubytype"}],"output":{"name":"repl"}}],[11,"rename","","Renames a `Repl`. The command line will start with `{name}&gt; `.",5,{"inputs":[{"name":"repl"},{"name":"str"}],"output":null}],[11,"start","","Starts a `Repl`.",5,{"inputs":[{"name":"repl"},{"name":"readline"}],"output":null}],[6,"MrubyType","","A `type` wrapper around a `Rc&lt;RefCell&lt;Mruby&gt;&gt;`. Created with `Mruby::new()`.",null,null],[8,"MrubyFile","","A `trait` useful for organising Rust types into dynamic mruby files.",null,null],[10,"require","","",6,{"inputs":[{"name":"mrubytype"}],"output":null}],[8,"MrubyImpl","","A `trait` used on `MrubyType` which implements mruby functionality.",null,null],[10,"filename","","Adds a filename to the mruby context.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"}],"output":null}],[10,"run","","Runs mruby `script` on a state and context and returns a `Value` in an `Ok`\nor an `Err` containing an mruby `Exception`&#39;s message.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"}],"output":{"name":"result"}}],[10,"run_unchecked","","Runs mruby `script` on a state and context and returns a `Value`. If an mruby Exception is\nraised, mruby will be left to handle it.\n# Examples",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"}],"output":{"name":"value"}}],[10,"runb","","Runs mruby compiled (.mrb) `script` on a state and context and returns a `Value` in an `Ok`\nor an `Err` containing an mruby `Exception`&#39;s message.",7,null],[10,"execute","","Runs mruby (compiled (.mrb) or not (.rb)) `script` on a state and context and returns a\n`Value` in an `Ok` or an `Err` containing an mruby `Exception`&#39;s message.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"path"}],"output":{"name":"result"}}],[10,"raise","","Raises an mruby `RuntimeError` with `message` message and `eclass` mruby Exception Class.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"},{"name":"str"}],"output":{"name":"value"}}],[10,"def_file","","Defines a dynamic file that can be `require`d containing the Rust type `T` and runs its\n`MrubyFile`-inherited `require` method.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"}],"output":null}],[10,"def_class","","Defines Rust type `T` as an mruby `Class` named `name`.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"}],"output":null}],[10,"def_method","","Defines an mruby method named `name`. The closure to be run when the `name` method is\ncalled should be passed through the `mrfn!` macro.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"},{"name":"f"}],"output":null}],[10,"def_class_method","","Defines an mruby class method named `name`. The closure to be run when the `name` method is\ncalled should be passed through the `mrfn!` macro.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"},{"name":"f"}],"output":null}],[10,"class_name","","Return the mruby name of a previously defined Rust type `T` with `def_class`.",7,{"inputs":[{"name":"mrubyimpl"}],"output":{"name":"result"}}],[10,"nil","","Creates mruby `Value` `nil`.",7,{"inputs":[{"name":"mrubyimpl"}],"output":{"name":"value"}}],[10,"bool","","Creates mruby `Value` containing `true` or `false`.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"bool"}],"output":{"name":"value"}}],[10,"fixnum","","Creates mruby `Value` of `Class` `Fixnum`.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"i32"}],"output":{"name":"value"}}],[10,"float","","Creates mruby `Value` of `Class` `Float`.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"f64"}],"output":{"name":"value"}}],[10,"string","","Creates mruby `Value` of `Class` `String`.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"}],"output":{"name":"value"}}],[10,"symbol","","Creates mruby `Value` of `Class` `Symbol`.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"str"}],"output":{"name":"value"}}],[10,"obj","","Creates mruby `Value` of `Class` `name` containing a Rust object of type `T`.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"t"}],"output":{"name":"value"}}],[10,"option","","Creates mruby `Value` of `Class` `name` containing a Rust `Option` of type `T`.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"option"}],"output":{"name":"value"}}],[10,"array","","Creates mruby `Value` of `Class` `Array`.",7,{"inputs":[{"name":"mrubyimpl"},{"name":"vec"}],"output":{"name":"value"}}],[8,"ReadLine","","A `trait` which performs very basic readline utility.",null,null],[10,"read","","A function that reads one line from the terminal.",8,{"inputs":[{"name":"readline"},{"name":"str"}],"output":{"name":"result"}}],[10,"add","","A function that add one line to the readline history.",8,{"inputs":[{"name":"readline"},{"name":"str"}],"output":null}],[14,"mrfn!","","A `macro` useful for defining Rust closures for mruby. Requires `use mrusty::*;`.",null,null],[14,"mrclass!","","A `macro` that comes in handy when defining class in order to remove a large part of the\nclutter and ensure correction. It automates and simplifies the implementation of the\n`MrubyFile` `trait`. Thus, any type provided to `mrclass!` will get an `MrubyFile`\nimplementation.",null,null],[14,"describe!","","A `macro` useful to run mruby specs. You can pass a tuple of `MrubyFile`s dependencies\nas a second argument.",null,null],[11,"filename","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"}],"output":null}],[11,"run","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"}],"output":{"name":"result"}}],[11,"run_unchecked","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"}],"output":{"name":"value"}}],[11,"runb","","",9,null],[11,"execute","","",9,{"inputs":[{"name":"mrubytype"},{"name":"path"}],"output":{"name":"result"}}],[11,"raise","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"},{"name":"str"}],"output":{"name":"value"}}],[11,"def_file","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"}],"output":null}],[11,"def_class","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"}],"output":null}],[11,"def_method","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"},{"name":"f"}],"output":null}],[11,"def_class_method","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"},{"name":"f"}],"output":null}],[11,"class_name","","",9,{"inputs":[{"name":"mrubytype"}],"output":{"name":"result"}}],[11,"nil","","",9,{"inputs":[{"name":"mrubytype"}],"output":{"name":"value"}}],[11,"bool","","",9,{"inputs":[{"name":"mrubytype"},{"name":"bool"}],"output":{"name":"value"}}],[11,"fixnum","","",9,{"inputs":[{"name":"mrubytype"},{"name":"i32"}],"output":{"name":"value"}}],[11,"float","","",9,{"inputs":[{"name":"mrubytype"},{"name":"f64"}],"output":{"name":"value"}}],[11,"string","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"}],"output":{"name":"value"}}],[11,"symbol","","",9,{"inputs":[{"name":"mrubytype"},{"name":"str"}],"output":{"name":"value"}}],[11,"obj","","",9,{"inputs":[{"name":"mrubytype"},{"name":"t"}],"output":{"name":"value"}}],[11,"option","","",9,{"inputs":[{"name":"mrubytype"},{"name":"option"}],"output":{"name":"value"}}],[11,"array","","",9,{"inputs":[{"name":"mrubytype"},{"name":"vec"}],"output":{"name":"value"}}]],"paths":[[3,"Mruby"],[4,"MrubyError"],[3,"Value"],[3,"GnuReadLine"],[3,"Spec"],[3,"Repl"],[8,"MrubyFile"],[8,"MrubyImpl"],[8,"ReadLine"],[6,"MrubyType"]]};
searchIndex["rl_sys"] = {"doc":"This library provides native bindings for the [GNU readline library][1].","items":[[3,"HistoryError","rl_sys","Represents an error that has occurred within the History API.",null,null],[3,"ReadlineError","","Represents an error that has occurred within the Readline API.",null,null],[5,"version","","Generate a version string.",null,{"inputs":[{"name":"bool"}],"output":{"name":"string"}}],[11,"fmt","","",0,{"inputs":[{"name":"readlineerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"readlineerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a ReadlineError struct from the given description and detail.",0,{"inputs":[{"name":"str"},{"name":"t"}],"output":{"name":"readlineerror"}}],[11,"from","","",0,{"inputs":[{"name":"nulerror"}],"output":{"name":"readlineerror"}}],[11,"from","","",0,{"inputs":[{"name":"utf8error"}],"output":{"name":"readlineerror"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"readlineerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"historyerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a HistoryError struct from the given description and detail.",1,{"inputs":[{"name":"str"},{"name":"t"}],"output":{"name":"historyerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"historyerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"nulerror"}],"output":{"name":"historyerror"}}],[11,"from","","",1,{"inputs":[{"name":"utf8error"}],"output":{"name":"historyerror"}}],[11,"from","","",1,{"inputs":[{"name":"parseinterror"}],"output":{"name":"historyerror"}}],[0,"history","","GNU Readline History API",null,null],[3,"HistoryEntry","rl_sys::history","A history entry.",null,null],[12,"line","","The line as a string.",2,null],[12,"timestamp","","An optional timestamp.",2,null],[12,"data","","Optional application specific data.",2,null],[3,"HistoryState","","The history state.",null,null],[12,"entries","","A pointer to the history entries list.",3,null],[12,"offset","","An offset to the current position in the history.",3,null],[12,"length","","The length of the history entries list.",3,null],[12,"size","","The size of the history entries list.",3,null],[12,"flags","","Any history flags that have been set.",3,null],[0,"expand","","[2.3.7 History Expansion](https://goo.gl/OHS0L3)",null,null],[5,"expand","rl_sys::history::expand","Expand string, placing the result into `output`, a pointer to a string\n(see section [1.1 History Expansion](https://goo.gl/aR8VB3)).",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"get_event","","Returns the text of the history event beginning at `s + *idx`. `*idx` is modified to point to\nafter the event specifier. At function entry, `*idx` points to the index into string where the\nhistory event specification begins. `add_delim` is a character that is allowed to end the event\nspecification in addition to the &quot;normal&quot; terminating characters.",null,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"option"}],"output":{"name":"result"}}],[5,"tokenize","","Return an array of tokens parsed out of string `s`, much as the shell might. The tokens are\nsplit on the characters in the `history_word_delimiters` variable, and shell quoting conventions\nare obeyed.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"arg_extract","","Extract a string segment consisting of the `first` through `last` arguments present in string\n`s`. Arguments are split using `history_tokenize`. If either `first` or `last` is &lt; 0, then make\nthat arg count from the right (subtract from the number of tokens, so that `first` = -1 means\nthe next to last token on the line). If `first` and `last` are 36 (ASCII &#39;$&#39;) the last arg from\nstring `s` is used.",null,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[0,"histfile","rl_sys::history","[2.3.6 Managing the History File](https://goo.gl/ovVU4a)",null,null],[5,"read","rl_sys::history::histfile","Add the contents of filename at path to the history list, a line at a time. If the path is\n`None`, then read from `~/.history`. Returns 0 if successful, or `HistoryError` with errno\ninformation if not.",null,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[5,"read_range","","Read a range of lines from filename, adding them to the history list. Start reading at line\n`from` and end at `to`. If `from` is zero, start at the beginning. If `to` is less than `from`,\nthen read until the end of the file. If filename is None, then read from `~/.history`. Returns 0\nif successful, or `HistoryError` with errno information if not.",null,{"inputs":[{"name":"option"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"write","","Write the current history to `filename`, overwriting `filename` if necessary. If `filename` is\nNone, then write the history list to `~/.history`. Returns 0 on success, or `HistoryError` with\n`errno` information on a read or write error.",null,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[5,"append","","Append the last `n` elements of the history list to `filename`. If `filename` is None, then\nappend to `~/.history`. Returns 0 on success, or `HistoryError` with `errno` information on a\nwrite error.",null,{"inputs":[{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[5,"truncate","","Truncate the history file `filename`, leaving only the last `n` lines. If `filename` is None,\nthen `~/.history&#39; is truncated. Returns 0 on success, or `HistoryError` with `errno` information\non a write error.",null,{"inputs":[{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[0,"listinfo","rl_sys::history","[2.3.3 Information About the History List](https://goo.gl/8OWMTy)",null,null],[5,"list","rl_sys::history::listinfo","Return a Vec&lt;HistoryEntry&gt; which is the current input history. Element 0 of this list is the\nbeginning of time. If there is no history, return an empty vector.",null,{"inputs":[],"output":{"name":"result"}}],[5,"offset","","Returns the offset of the current history element.",null,{"inputs":[],"output":{"name":"i32"}}],[5,"current","","Return the history entry at the current position, as determined by `where_history()``. If there\nis no entry there, return a HistoryError.",null,{"inputs":[],"output":{"name":"result"}}],[5,"get","","Return the history entry at position offset, starting from `history_base`. If there is no entry\nthere, or if offset is greater than the history length, return a HistoryError.",null,{"inputs":[{"name":"i32"}],"output":{"name":"result"}}],[5,"get_time","","Return the time stamp associated with the history entry entry.",null,{"inputs":[{"name":"historyentry"}],"output":{"name":"timespec"}}],[5,"total_bytes","","Return the number of bytes that the primary history entries are using. This function returns the\nsum of the lengths of all the lines in the history.",null,{"inputs":[],"output":{"name":"i32"}}],[0,"listmgmt","rl_sys::history","[2.3.2 History List Management](https://goo.gl/P6UC5s)",null,null],[5,"add","rl_sys::history::listmgmt","Place string at the end of the history list. The associated data field (if any) is set to NULL.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"add_time","","Change the time stamp associated with the most recent history entry to the given time.  Note\nthat if the `history_comment_char` variable has not been set this will have no effect.  This is\nstored as seconds since the epoch, so you may lose some precision.",null,{"inputs":[{"name":"timespec"}],"output":{"name":"result"}}],[5,"remove","","Remove history entry at the given offset from the history. The removed element is returned so\nyou can free the line, data, and containing structure.",null,{"inputs":[{"name":"i32"}],"output":{"name":"historyentry"}}],[5,"free_entry","","Free the history entry and any history library private data associated with it. If there is\napplication-specific data, an Err is returned with a pointer to the data so the caller can\ndispose of it",null,{"inputs":[{"name":"historyentry"}],"output":{"name":"result"}}],[5,"replace_entry","","Replace the history entry at offset with the given line and data. This returns the old entry so\nthe caller can dispose of any application-specific data. In the case of an invalid offset, an\nErr is returned.",null,{"inputs":[{"name":"i32"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[5,"clear","","Clear the history list by deleting all the entries.",null,{"inputs":[],"output":null}],[5,"stifle","","Stifle the history list, remembering only the last *max* entries.",null,{"inputs":[{"name":"i32"}],"output":null}],[5,"unstifle","","Stop stifling the history. This returns the previously-set maximum number of history entries\n(as set by `stifle_history()`).",null,{"inputs":[],"output":{"name":"i32"}}],[5,"is_stifled","","Returns true if the history is stifled, false if it is not.",null,{"inputs":[],"output":{"name":"bool"}}],[0,"mgmt","rl_sys::history","[2.3.1 Initializing History and State Management](https://goo.gl/An1iSg)",null,null],[5,"init","rl_sys::history::mgmt","Begin a session in which the history functions might be used. This initializes the interactive\nvariables.  Note that this will only call `using_history` once after first use.",null,{"inputs":[],"output":null}],[5,"get_state","","Return a structure describing the current state of the input history.",null,{"inputs":[],"output":{"name":"historystate"}}],[5,"set_state","","Set the state of the history list according to state.",null,null],[5,"cleanup","","Cleanup the history state.  This should be called on program exit or after you are completely\nfinished using the History API.",null,null],[0,"move_","rl_sys::history","[2.3.4 Moving Around the History List](https://goo.gl/ROYfRB)",null,null],[5,"set_pos","rl_sys::history::move_","Set the current history offset, an absolute index into the list. Returns true on success, false\nif the offset is less than zero or greater than the number of history entries.",null,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[5,"previous","","Back up the current history offset to the previous history entry, and return a pointer to that\nentry. If there is no previous entry, return a `HistoryError`.",null,{"inputs":[],"output":{"name":"result"}}],[5,"next","","Move the current history offset forward to the next history entry, and return a pointer to that\nentry. If there is no next entry, return a `HistoryError`.",null,{"inputs":[],"output":{"name":"result"}}],[0,"search","rl_sys::history","[2.3.5 Searching the History List](https://goo.gl/Xltw2k)",null,null],[4,"Direction","rl_sys::history::search","The direction to search through the history entries.",null,null],[13,"Forward","","Search forward through history entries.",4,null],[13,"Backward","","Search backward through history entries.",4,null],[5,"search","","Search the history for string, starting at the current history offset. If direction is\n`Backward`, then the search is through previous entries, otherwise through subsequent entries.\nIf string is found, then the current history index is set to that history entry, and the value\nreturned is the offset in the line of the entry where string was found. Otherwise, nothing is\nchanged, and a -1 is returned.",null,{"inputs":[{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[5,"search_prefix","","Search the history for string, starting at the current history offset. The search is anchored:\nmatching lines must begin with string. If direction is `Backward`, then the search is through\nprevious entries, otherwise through subsequent entries. If string is found, then the current\nhistory index is set to that entry, and the return value is 0. Otherwise, nothing is changed,\nand a -1 is returned.",null,{"inputs":[{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[5,"search_pos","","Search for string in the history list, starting at pos, an absolute index into the list. If\ndirection `Backward`, the search proceeds backward from pos, otherwise forward. Returns the\nabsolute index of the history element where string was found, or -1 otherwise.",null,{"inputs":[{"name":"str"},{"name":"t"},{"name":"i32"}],"output":{"name":"result"}}],[11,"into","","",4,{"inputs":[{"name":"direction"}],"output":{"name":"i32"}}],[0,"vars","rl_sys::history","[2.4 History Variables](https://goo.gl/la0XEf)",null,null],[5,"set_write_timestamps","rl_sys::history::vars","If non-zero, timestamps are written to the history file, so they can be preserved between\nsessions. The default value is 0, meaning that timestamps are not saved.",null,{"inputs":[{"name":"u8"}],"output":null}],[5,"get_write_timestamps","","Get the current value of the `history_write_timestamps` variable.",null,{"inputs":[],"output":{"name":"i32"}}],[5,"set_expansion_char","","The character that introduces a history event. The default is `!&#39;. Setting this to 0\ninhibits history expansion.",null,{"inputs":[{"name":"char"}],"output":null}],[5,"get_expansion_char","","Get the current value of the `history_expansion_char` variable.",null,{"inputs":[],"output":{"name":"char"}}],[5,"set_subst_char","","The character that invokes word substitution if found at the start of a line. The default\nis `^&#39;.",null,{"inputs":[{"name":"char"}],"output":null}],[5,"get_subst_char","","Get the current value of the `history_subst_char` variable.",null,{"inputs":[],"output":{"name":"char"}}],[5,"set_comment_char","","During tokenization, if this character is seen as the first character of a word, then it\nand all subsequent characters up to a newline are ignored, suppressing history expansion for\nthe remainder of the line. This is disabled by default.",null,{"inputs":[{"name":"char"}],"output":null}],[5,"get_comment_char","","Get the current value of the `history_comment_char` variable.",null,{"inputs":[],"output":{"name":"char"}}],[5,"set_word_delimiters","","Set the list of word delimiter characters.  Note, this will replace any existing list.",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"add_word_delimiter","","Add a character from the list of word delimiter characters.",null,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[5,"remove_word_delimiter","","Remove a character from the list of word delimiter characters.",null,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[5,"get_word_delimiters","","Get the list of word delimiter characters. The characters that separate tokens for\n`history_tokenize()`. The default value is `&quot; \\t\\n;&amp;()&lt;&gt;&quot;`.",null,{"inputs":[],"output":{"name":"result"}}],[5,"set_search_delimiter_chars","","Set the list of search delimiter characters.  Note, this will replace any existing list.",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"add_search_delimiter_char","","Add a character to the list of search delimiter characters.",null,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[5,"remove_search_delimiter_char","","Remove a character from the list of search delimiter characters.",null,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[5,"get_search_delimiter_chars","","Get the list of search delimiter characters. The list of additional characters which can delimit\na history search string, in addition to space, TAB, &#39;:&#39; and &#39;?&#39; in the case of a substring\nsearch. The default is empty.",null,{"inputs":[],"output":{"name":"result"}}],[5,"set_no_expand_chars","","Set the list of no expand characters.  Note, this will replace any existing list.",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[5,"add_no_expand_char","","Add a character to the list of no expand characters.",null,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[5,"remove_no_expand_char","","Remove a character from the list of no expand characters.",null,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[5,"get_no_expand_chars","","The list of characters which inhibit history expansion if found immediately following\n`history_expansion_char`. The default is space, tab, newline, carriage return, and `=&#39;.",null,{"inputs":[],"output":{"name":"result"}}],[5,"set_quotes_inhibit_expansion","","If non-zero, single-quoted words are not scanned for the history expansion character. The\ndefault value is 0.",null,{"inputs":[{"name":"i8"}],"output":null}],[5,"get_quotes_inhibit_expansion","","Get the current value of the `history_quotes_inhibit_expansion` variable.",null,{"inputs":[],"output":{"name":"i32"}}],[5,"set_inhibit_expansion_function","","This should be set to a function of the following type:\n`extern fn(*mut c_char, c_uint) -&gt; c_int`.  The first argument is a string pointer\nand the second is an int index into that string. It should return a non-zero value if the\nhistory expansion starting at string[i] should not be performed; zero if the expansion should\nbe done. It is intended for use by applications like Bash that use the history expansion\ncharacter for additional purposes. By default, this variable is set to NULL.",null,{"inputs":[{"name":"inhibitexpansionfunc"}],"output":null}],[5,"get_inhibit_expansion_function","","Get the value of the inhibit expansion function.  This will be None if it is not set.",null,{"inputs":[],"output":{"name":"inhibitexpansionfunc"}}],[7,"history_base","","The logical offset of the first entry in the history list.",null,null],[7,"history_length","","The number of entries currently stored in the history list.",null,null],[7,"history_max_entries","","The maximum number of history entries. This must be changed using `stifle_history()`.",null,null],[6,"HistoryData","rl_sys::history","Application specific data attached to the history entry.",null,null],[6,"InhibitExpansionFunc","","Inhibit Expansion Function Type.",null,null],[11,"clone","","",2,{"inputs":[{"name":"historyentry"}],"output":{"name":"self"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",2,{"inputs":[{"name":"historyentry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"historystate"}],"output":{"name":"self"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",3,{"inputs":[{"name":"historystate"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"readline","rl_sys","GNU Readline API",null,null],[3,"IOMarker","rl_sys::readline","I/O Marker",null,null],[12,"next","","Next I/O marker.",5,null],[12,"sbuf","","File buffer.",5,null],[12,"pos","","Position.",5,null],[3,"IOFile","","I/O File Type",null,null],[12,"flags","","Flags",6,null],[12,"read_ptr","","Flags",6,null],[12,"read_end","","Flags",6,null],[12,"read_base","","Flags",6,null],[12,"write_base","","Flags",6,null],[12,"write_ptr","","Flags",6,null],[12,"write_end","","Flags",6,null],[12,"buf_base","","Flags",6,null],[12,"buf_end","","Flags",6,null],[12,"save_base","","Flags",6,null],[12,"backup_base","","Flags",6,null],[12,"save_end","","Flags",6,null],[12,"markers","","Flags",6,null],[12,"chain","","Flags",6,null],[12,"fileno","","Flags",6,null],[12,"flags2","","Flags",6,null],[12,"old_offset","","Flags",6,null],[12,"cur_column","","Flags",6,null],[12,"vtable_offset","","Flags",6,null],[12,"shortbuf","","Flags",6,null],[12,"lock","","Flags",6,null],[12,"offset","","Flags",6,null],[12,"pad1","","Flags",6,null],[12,"pad2","","Flags",6,null],[12,"pad3","","Flags",6,null],[12,"pad4","","Flags",6,null],[12,"pad5","","Flags",6,null],[12,"mode","","Flags",6,null],[12,"unused2","","Flags",6,null],[3,"KeymapEntry","","Keymap Entry",null,null],[12,"type_","","Keymap Type",7,null],[12,"kfunc","","Keymap Function",7,null],[3,"ReadlineState","","Readline State",null,null],[12,"point","","Current point in the line.",8,null],[12,"end","","The end of the line.",8,null],[12,"mark","","The mark point in the line.",8,null],[12,"buffer","","The current line buffer.",8,null],[12,"buflen","","The line buffer length.",8,null],[12,"ul","","The undo list.",8,null],[12,"prompt","","The current prompt.",8,null],[12,"rlstate","","The state bitflag.",8,null],[12,"done","","The done flag.",8,null],[12,"kmap","","The current keymap.",8,null],[12,"lastfunc","","The last function executed.",8,null],[12,"insmode","","The insert mode.",8,null],[12,"edmode","","The edit mode.",8,null],[12,"kseqlen","","The last key sequence length.",8,null],[12,"inf","","Infile.",8,null],[12,"outf","","Outfile.",8,null],[12,"pendingin","","The pending input.",8,null],[12,"makro","","A macro.",8,null],[12,"catchsigs","","Catch signals flag.",8,null],[12,"catchsigwinch","","Catch winch signal flag.",8,null],[12,"reserved","","Reserved for later expansion so the struct size doesn&#39;t change.",8,null],[3,"UndoList","","Undo List",null,null],[12,"next","","Next Undo item.",9,null],[12,"start","","Start of the text for this undo.",9,null],[12,"end","","End of the text for this undo.",9,null],[12,"text","","The undo text.",9,null],[12,"what","","The type of undo (UndoDelete, UndoInsert, UndoBegin, UndoEnd)",9,null],[5,"readline","","Wraps the libreadline readline function.  The argument is the prompt to use.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"callback_handler_install","","[2.4.12 Alternate Interface]\n[2.4.12 alternate interface]: https://goo.gl/gg9u4P",null,null],[5,"callback_read_char","","Whenever an application determines that keyboard input is available, it should call\n`rl_callback_read_char()`, which will read the next character from the current input source. If\nthat character completes the line, `rl_callback_read_char` will invoke the `lhandler` function\ninstalled by `rl_callback_handler_install` to process the line. Before calling the `lhandler`\nfunction, the terminal settings are reset to the values they had before calling\n`rl_callback_handler_install`. If the `lhandler` function returns, and the line handler remains\ninstalled, the terminal settings are modified for Readline&#39;s use again. EOF is indicated by\ncalling `lhandler` with a NULL line.",null,null],[5,"callback_handler_remove","","Restore the terminal to its initial state and remove the line handler. This may be called from\nwithin a callback as well as independently. If the `lhandler` installed by\n`rl_callback_handler_install` does not exit the program, either this function or the function\nreferred to by the value of `rl_deprep_term_function` should be called before the program exits\nto reset the terminal settings.",null,null],[0,"binding","","[2.4.3 Binding Keys]\n[2.4.3 binding keys]: https://goo.gl/fmY0qd",null,null],[4,"BindType","rl_sys::readline::binding","Use for calls to `generic_bind`.",null,null],[13,"IsFunc","","Generate a function binding.",10,null],[13,"IsKmap","","Generate a keymap binding.",10,null],[13,"IsMacr","","Generate a macro binding.",10,null],[5,"bind_key","","Binds `key` to `f` in the currently active keymap. Returns non-zero in the case of an invalid\nkey.",null,null],[5,"bind_key_in_map","","Bind `key` to function `f` in `map`. Returns non-zero in the case of an invalid key.",null,null],[5,"bind_key_if_unbound","","Binds `key` to function `f` if it is not already bound in the currently active keymap. Returns\nnon-zero in the case of an invalid `key` or if `key` is already bound.",null,null],[5,"bind_key_if_unbound_in_map","","Binds `key` to function `f` if it is not already bound in `map`. Returns non-zero in the case of\nan invalid `key` or if `key` is already bound.",null,null],[5,"unbind_key","","Bind `key` to the null function in the currently active keymap. Returns non-zero in case of\nerror.\nBinds `key` to function `f` if it is not already bound in `map`. Returns non-zero in the case of\nan invalid `key` or if `key` is already bound.",null,{"inputs":[{"name":"char"}],"output":{"name":"bindresult"}}],[5,"unbind_key_in_map","","Bind `key` to the null function in `map`. Returns non-zero in case of error.",null,{"inputs":[{"name":"char"},{"name":"keymap"}],"output":{"name":"bindresult"}}],[5,"unbind_function_in_map","","Unbind all keys that execute function in map.",null,null],[5,"unbind_command_in_map","","Unbind all keys that are bound to `cmd` in map.",null,{"inputs":[{"name":"str"},{"name":"keymap"}],"output":{"name":"bindresult"}}],[5,"bind_keyseq","","Bind the key sequence represented by the string `keyseq` to the function `f`, beginning in the\ncurrent keymap. This makes new keymaps as necessary. The return value is non-zero if `keyseq` is\ninvalid.",null,null],[5,"bind_keyseq_in_map","","Bind the key sequence represented by the string `keyseq` to the function `f`. This makes new\nkeymaps as necessary. Initial bindings are performed in `map`. The return value is non-zero if\nkeyseq is invalid.",null,null],[5,"set_key","","Equivalent to `rl_bind_keyseq_in_map`.",null,null],[5,"bind_keyseq_if_unbound","","Binds `keyseq` to function `f` if it is not already bound in the currently active keymap.\nReturns non-zero in the case of an invalid `keyseq` or if `keyseq` is already bound.",null,null],[5,"bind_keyseq_if_unbound_in_map","","Binds `keyseq` to function `f` if it is not already bound in map. Returns non-zero in the case\nof an invalid `keyseq` or if `keyseq` is already bound.",null,null],[5,"generic_bind","","Bind the key sequence represented by the string `keyseq` to the function `f`. type says what\nkind of data is pointed to by data; this can be a function (IsFunc), a macro (IsMacr), or a\nkeymap (IsKmap). This makes new keymaps as necessary. The initial keymap in which to do bindings\nis `map`.",null,{"inputs":[{"name":"str"},{"name":"bindtype"},{"name":"keymap"}],"output":{"name":"bindresult"}}],[5,"parse_and_bind","","Parse `line` as if it had been read from the `inputrc` file and perform any key bindings and\nvariable assignments found (see section [1.3 Readline Init File]).\n[1.3 readline init file]: https://goo.gl/VtaCdx",null,{"inputs":[{"name":"str"}],"output":{"name":"bindresult"}}],[5,"read_init_file","","Read keybindings and variable assignments from `path` (see section [1.3 Readline Init File]).\n[1.3 readline init file]: https://goo.gl/VtaCdx",null,{"inputs":[{"name":"path"}],"output":{"name":"bindresult"}}],[6,"BindResult","","Result type returned by all binding functions.",null,null],[11,"eq","","",10,{"inputs":[{"name":"bindtype"},{"name":"bindtype"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"bindtype"},{"name":"bindtype"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"bindtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",10,{"inputs":[{"name":"i32"}],"output":{"name":"bindtype"}}],[0,"charin","rl_sys::readline","[2.4.8 Character Input]\n[2.4.8 character input]: https://goo.gl/yNtf60",null,null],[5,"read_key","rl_sys::readline::charin","Return the next character available from Readline&#39;s current input stream. This handles input\ninserted into the input stream via `rl_pending_input` (see section [2.3 Readline Variables]) and\n`rl_stuff_char()`, macros, and characters read from the keyboard. While waiting for input, this\nfunction will call any function assigned to the `rl_event_hook` variable.\n[2.3 readline variables]: https://goo.gl/E1D6om",null,{"inputs":[],"output":{"name":"result"}}],[5,"getc","","Return the next character available from `stream`, which is assumed to be the keyboard.",null,null],[5,"stuff_char","","Insert `c` into the Readline input stream. It will be &quot;read&quot; before Readline attempts to read\ncharacters from the terminal with `rl_read_key()`. Up to 512 characters may be pushed back.\n`rl_stuff_char` returns 1 if the character was successfully inserted; 0 otherwise.",null,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[5,"execute_next","","Make `c` be the next command to be executed when `rl_read_key()`` is called. This sets\n`rl_pending_input`.",null,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[5,"clear_pending_input","","Unset `rl_pending_input`, effectively negating the effect of any previous call to\n`rl_execute_next()`. This works only if the pending input has not already been read with\n`rl_read_key()`.",null,{"inputs":[],"output":{"name":"result"}}],[5,"set_keyboard_input_timeout","","While waiting for keyboard input in `rl_read_key()`, Readline will wait for `us` microseconds\nfor input before calling any function assigned to `rl_event_hook`. `us` must be greater than or\nequal to zero (a zero-length timeout is equivalent to a poll). The default waiting period is\none-tenth of a second. Returns the old timeout value.",null,{"inputs":[{"name":"i32"}],"output":{"name":"result"}}],[0,"funmap","rl_sys::readline","[2.4.4 Associating Function Names and Bindings]\n[2.4.4 associating function names and bindings]: https://goo.gl/CrXrWQ",null,null],[5,"named_function","rl_sys::readline::funmap","Return the function with name `name`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"function_of_keyseq","","Return the function invoked by `keyseq` in keymap `map`. If `map` is None, the current keymap is\nused. If `add_type` is true, the type of the object is returned (one of IsFunc, IsKmap, or\nIsMacr).",null,{"inputs":[{"name":"str"},{"name":"option"},{"name":"bool"}],"output":{"name":"result"}}],[5,"invoking_keyseqs","","Return an array of strings representing the key sequences used to invoke function in the current\nkeymap.",null,null],[5,"invoking_keyseqs_in_map","","Return an array of strings representing the key sequences used to invoke function in the current\nkeymap.",null,null],[5,"function_dumper","","Print the readline function names and the key sequences currently bound to them to\n`rl_outstream`. If `readable` is true, the list is formatted in such a way that it can be made\npart of an `inputrc` file and re-read.",null,null],[5,"list_funmap_names","","Print the names of all bindable Readline functions to `rl_outstream`.",null,null],[5,"add_funmap_entry","","Add `name` to the list of bindable Readline command names, and make function `f` the function to\nbe called when `name` is invoked.",null,null],[0,"keymap","rl_sys::readline","[2.4.2 Selecting A Keymap]\n[2.4.2 selecting a keymap]: https://cnswww.cns.cwru.edu/php/chet/readline/readline.html#SEC31",null,null],[5,"create_empty","rl_sys::readline::keymap","Returns a new, empty keymap. The space for the keymap is allocated with `malloc()`; the caller\nshould free it by calling `rl_free_keymap()` when done.",null,{"inputs":[],"output":{"name":"result"}}],[5,"copy","","Return a new keymap which is a copy of map.",null,{"inputs":[{"name":"keymap"}],"output":{"name":"result"}}],[5,"make","","Return a new keymap with the printing characters bound to `rl_insert`, the lowercase Meta\ncharacters bound to run their equivalents, and the Meta digits bound to produce numeric\narguments.",null,{"inputs":[],"output":{"name":"result"}}],[5,"discard","","Free the storage associated with the data in keymap. The caller should free keymap.",null,null],[5,"free","","Free all storage associated with keymap. This calls `rl_discard_keymap` to free subordindate\nkeymaps and macros.",null,null],[5,"get","","Returns the currently active keymap.",null,{"inputs":[],"output":{"name":"result"}}],[5,"set","","Makes keymap the currently active keymap.",null,null],[5,"get_by_name","","Return the keymap matching `name`. `name` is one which would be supplied in a set keymap inputrc\nline (see section [1.3 Readline Init File]).\n[1.3 readline init file]: https://goo.gl/VtaCdx",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"get_name","","Return the name matching `map`. `name` is one which would be supplied in a set keymap inputrc\nline (see section [1.3 Readline Init File]).\n[1.3 readline init file]: https://goo.gl/VtaCdx",null,{"inputs":[{"name":"keymap"}],"output":{"name":"result"}}],[0,"misc","rl_sys::readline","[2.4.11 Miscellaneous Functions]\n[2.4.11 miscellaneous functions]: https://goo.gl/2BieXb",null,null],[5,"macro_dumper","rl_sys::readline::misc","Print the key sequences bound to macros and their values, using the current keymap, to\n`rl_outstream`. If `readable` is true, the list is formatted in such a way that it can be made\npart of an inputrc file and re-read.",null,null],[5,"variable_bind","","Make the Readline variable `name` have `value`. This behaves as if the readline command\n`set variable value` had been executed in an inputrc file (see section\n[1.3.1 Readline Init File Syntax]).\n[1.3.1 readline init file syntax]: https://goo.gl/Ivqovs",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"variable_value","","Return a string representing the value of the Readline variable `name`. For boolean variables,\nthis string is either `on&#39; or `off&#39;.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"variable_dumper","","Print the readline variable names and their current values to `rl_outstream`. If readable is\ntrue, the list is formatted in such a way that it can be made part of an inputrc file and\nre-read.",null,null],[5,"set_paren_blink_timeout","","Set the time interval (in microseconds) that Readline waits when showing a balancing character\nwhen `blink-matching-paren` has been enabled.",null,{"inputs":[{"name":"i32"}],"output":{"name":"result"}}],[5,"get_termcap","","Retrieve the string value of the termcap capability `cap`. Readline fetches the termcap entry\nfor the current terminal name and uses those capabilities to move around the screen line and\nperform other terminal-specific operations, like erasing a line. Readline does not use all of a\nterminal&#39;s capabilities, and this function will return values for only those capabilities\nReadline uses.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"clear_history","","Clear the history list by deleting all of the entries, in the same manner as the History\nlibrary&#39;s `clear_history()` function. This differs from `clear_history` because it frees\nprivate data Readline saves in the history list.",null,null],[0,"modtext","rl_sys::readline","[2.4.7 Modifying Text]\n[2.4.7 modifying text]: https://goo.gl/DLJ9Gn",null,null],[5,"insert_text","rl_sys::readline::modtext","Insert text into the line at the current cursor position. Returns the number of characters\ninserted.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"delete_text","","Delete the text between `start` and `end` in the current line. Returns the number of characters\ndeleted.",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"copy_text","","Return a copy of the text between `start` and `end` in the current line.",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"kill_text","","Copy the text between `start` and `end` in the current line to the kill ring, appending or\nprepending to the last kill if the last command was a kill command. The text is deleted. If\nstart is less than end, the text is appended, otherwise prepended. If the last command was not\na kill, a new kill ring slot is used.",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"push_macro_input","","Cause macro `m` to be inserted into the line, as if it had been invoked by a key bound to a\nmacro. Not especially useful; use `rl_insert_text()` instead.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"naming","rl_sys::readline","[2.4.1 Naming a Function]\n[2.4.1 naming a function]: https://goo.gl/MN1Yf9",null,null],[5,"add_func","rl_sys::readline::naming","Add `name` to the list of named functions. Make `f` be the function that gets called. If `key`\nis not -1, then bind it to function using `rl_bind_key()`.",null,{"inputs":[{"name":"str"},{"name":"char"},{"name":"commandfunction"}],"output":{"name":"result"}}],[0,"redisplay","rl_sys::readline","[2.4.6 Redisplay]\n[2.4.6 redisplay]: https://goo.gl/i3PS2Q",null,null],[5,"redisplay","rl_sys::readline::redisplay","Change what&#39;s displayed on the screen to reflect the current contents of `rl_line_buffer`.",null,null],[5,"forced_update_display","","Force the line to be updated and redisplayed, whether or not Readline thinks the screen display\nis correct.",null,{"inputs":[],"output":{"name":"result"}}],[5,"on_new_line","","Tell the update functions that we have moved onto a new (empty) line, usually after outputting a\nnewline.",null,{"inputs":[],"output":{"name":"result"}}],[5,"on_new_line_with_prompt","","Tell the update functions that we have moved onto a new line, with `rl_prompt` already\ndisplayed. This could be used by applications that want to output the prompt string themselves,\nbut still need Readline to know the prompt string length for redisplay. It should be used after\nsetting `rl_already_prompted`.",null,{"inputs":[],"output":{"name":"result"}}],[5,"reset_line_state","","Reset the display state to a clean state and redisplay the current line starting on a new line.",null,{"inputs":[],"output":{"name":"result"}}],[5,"crlf","","Move the cursor to the start of the next screen line.",null,{"inputs":[],"output":{"name":"result"}}],[5,"show_char","","Display character `c` on `rl_outstream`. If Readline has not been set to display meta characters\ndirectly, this will convert meta characters to a meta-prefixed key sequence. This is intended\nfor use by applications which wish to do their own redisplay.",null,{"inputs":[{"name":"char"}],"output":{"name":"result"}}],[5,"message","","The arguments are a format string as would be supplied to printf, possibly containing conversion\nspecifications such as `%d&#39;, and any additional arguments necessary to satisfy the conversion\nspecifications. The resulting string is displayed in the echo area. The echo area is also used\nto display numeric arguments and search strings. You should call `rl_save_prompt` to save the\nprompt information before calling this function.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"clear_message","","Clear the message in the echo area. If the prompt was saved with a call to `rl_save_prompt`\nbefore the last call to `rl_message`, call `rl_restore_prompt` before calling this function.",null,{"inputs":[],"output":{"name":"result"}}],[5,"save_prompt","","Save the local Readline prompt display state in preparation for displaying a new message in the\nmessage area with `rl_message()`.",null,null],[5,"rl_restore_prompt","","Restore the local Readline prompt display state saved by the most recent call to\n`rl_save_prompt`.  If `rl_save_prompt` was called to save the prompt before a call to\n`rl_message`, this function should be called before the corresponding call to\n`rl_clear_message`.",null,null],[5,"expand_prompt","","Expand any special character sequences in prompt and set up the local Readline prompt redisplay\nvariables. This function is called by `readline()`. It may also be called to expand the primary\nprompt if the `rl_on_new_line_with_prompt()` function or `rl_already_prompted` variable is used.\nIt returns the number of visible characters on the last line of the (possibly multi-line)\nprompt. Applications may indicate that the prompt contains characters that take up no physical\nscreen space when displayed by bracketing a sequence of such characters with the special markers\n**RL_PROMPT_START_IGNORE** and **RL_PROMPT_END_IGNORE** (declared in `readline.h&#39;. This may be\nused to embed terminal-specific escape sequences in prompts.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"set_prompt","","Make Readline use prompt for subsequent redisplay. This calls `rl_expand_prompt()`` to expand\nthe prompt and sets `rl_prompt` to the result.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"termmgmt","rl_sys::readline","[2.4.9 Terminal Management]\n[2.4.9 terminal management]: https://goo.gl/NKP48u",null,null],[5,"prep_terminal","rl_sys::readline::termmgmt","Modify the terminal settings for Readline&#39;s use, so `readline()` can read a single character at\na time from the keyboard. The `meta_flag` argument should be non-zero if Readline should read\neight-bit input.",null,null],[5,"deprep_terminal","","Undo the effects of `rl_prep_terminal()`, leaving the terminal in the state in which it was\nbefore the most recent call to `rl_prep_terminal()`.",null,null],[5,"tty_set_default_bindings","","Read the operating system&#39;s terminal editing characters (as would be displayed by stty) to their\nReadline equivalents. The bindings are performed in `kmap`.",null,null],[5,"tty_unset_default_bindings","","Reset the bindings manipulated by `rl_tty_set_default_bindings` so that the terminal editing\ncharacters are bound to `rl_insert`. The bindings are performed in `kmap`.",null,null],[5,"reset_terminal","","Reinitialize Readline&#39;s idea of the terminal settings using `name` as the terminal type (e.g.,\nvt100). If `name` is None, the value of the TERM environment variable is used.",null,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[0,"util","rl_sys::readline","[2.4.10 Utility Functions]\n[2.4.10 utility functions]: https://goo.gl/wg27lL",null,null],[5,"save_state","rl_sys::readline::util","Save a snapshot of Readline&#39;s internal state to `state`. The contents of the `readline_state`\nstructure are documented in &#39;readline.h&#39;. The caller is responsible for allocating the\nstructure.",null,{"inputs":[{"name":"readlinestate"}],"output":{"name":"result"}}],[5,"restore_state","","Restore Readline&#39;s internal state to that stored in `state`, which must have been saved by a\ncall to `save_state`. The contents of the `readline_state` structure are documented in\n&#39;readline.h&#39;. The caller is responsible for freeing the structure.",null,{"inputs":[{"name":"readlinestate"}],"output":{"name":"result"}}],[5,"free","","Deallocate the memory pointed to by `ptr`. `ptr` must have been allocated by malloc.",null,null],[5,"replace_line","","Replace the contents of `rl_line_buffer` with text. The point and mark are preserved, if\npossible. If `clear_undo` is true, the undo list associated with the current line is cleared.",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"result"}}],[5,"extend_line_buffer","","Ensure that `rl_line_buffer` has enough space to hold len characters, possibly reallocating it\nif necessary.",null,null],[5,"init","","Initialize or re-initialize Readline&#39;s internal state. It&#39;s not strictly necessary to call this;\n`readline()` calls it before reading any input. Note that this will only call `initialize` once\nafter first use.",null,{"inputs":[],"output":null}],[5,"ding","","Ring the terminal bell, obeying the setting of `bell-style`.",null,null],[5,"alphabetic","","Return 1 if `c` is an alphabetic character.",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[5,"display_match_list","","A convenience function for displaying a list of strings in columnar format on Readline&#39;s output\nstream. `matches` is the list of strings, in argv format, such as a list of completion matches.\n`len` is the number of strings in `matches`, and `max` is the length of the longest string in\n`matches`. This function uses the setting of `print-completions-horizontally` to select how the\nmatches are displayed (see section [1.3.1 Readline Init File Syntax]). When displaying\ncompletions, this function sets the number of columns used for display to the value of\n`completion-display-width`, the value of the environment variable COLUMNS, or the screen width,\nin that order.\n[1.3.1 readline init file syntax]: https://goo.gl/Ivqovs",null,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[0,"undo","rl_sys::readline","[2.4.5 Allowing Undoing]\n[2.4.5 allowing undoing]: https://goo.gl/ZemRqX",null,null],[4,"UndoType","rl_sys::readline::undo","Undo Event Types",null,null],[13,"UndoDelete","","Insert some text.",11,null],[13,"UndoInsert","","Delete some text.",11,null],[13,"UndoBegin","","Start an undo group (added by `rl_begin_undo_group()`)",11,null],[13,"UndoEnd","","End an undo group (add by `rl_end_undo_group()`)",11,null],[5,"begin_undo_group","","Begins saving undo information in a group construct. The undo information usually comes from\ncalls to `rl_insert_text()` and `rl_delete_text()`, but could be the result of calls to\n`rl_add_undo()`.",null,{"inputs":[],"output":{"name":"i32"}}],[5,"end_undo_group","","Closes the current undo group started with `rl_begin_undo_group()`. There should be one call to\n`rl_end_undo_group()` for each call to `rl_begin_undo_group()`.",null,{"inputs":[],"output":{"name":"i32"}}],[5,"add_undo","","Remember how to undo an event (according to `what`).",null,{"inputs":[{"name":"undotype"},{"name":"str"}],"output":{"name":"result"}}],[5,"free_undo_list","","Free the existing undo list.  Note that this depends on history being initialized and used.",null,null],[5,"do_undo","","Undo the first thing on the undo list. Returns an Err if there was nothing to undo, Ok if\nsomething was undone. Note that this depends on history being initialized and used.",null,{"inputs":[],"output":{"name":"result"}}],[5,"modifying","","Tell Readline to save the text between `start` and `end` as a single undo unit. It is assumed\nthat you will subsequently modify that text.",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"eq","","",11,{"inputs":[{"name":"undotype"},{"name":"undotype"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"undotype"},{"name":"undotype"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"undotype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",11,{"inputs":[{"name":"i32"}],"output":{"name":"undotype"}}],[0,"vars","rl_sys::readline","[2.3 Readline Variables]\n[2.3 readline variables]: https://goo.gl/E1D6om",null,null],[3,"ReadlineState","rl_sys::readline::vars","Readline State Bitflags",null,null],[5,"get_state","","Get the Readline state flags.",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_library_version","","The version number of this revision of the library.",null,{"inputs":[],"output":{"name":"string"}}],[7,"rl_line_buffer","","This is the line gathered so far. You are welcome to modify the contents of the line, but\nsee [2.4.5 Allowing Undoing]. The function `rl_extend_line_buffer`\nis available to increase the memory allocated to `rl_line_buffer`.\n[2.4.5 allowing undoing]: https://goo.gl/oYj9bq",null,null],[7,"rl_point","","The offset of the current cursor position in `rl_line_buffer` (the *point*).",null,null],[7,"rl_end","","The number of characters present in `rl_line_buffer`. When `rl_point` is at the end of the\nline, `rl_point` and `rl_end` are equal.",null,null],[7,"rl_mark","","The mark (saved position) in the current line. If set, the mark and point define a region.",null,null],[7,"rl_done","","Setting this to a non-zero value causes Readline to return the current line immediately.",null,null],[7,"rl_num_chars_to_read","","Setting this to a positive value before calling `readline()` causes Readline to return\nafter accepting that many characters, rather than reading up to a character bound to\n`accept-line`.",null,null],[7,"rl_pending_input","","Setting this to a value makes it the next keystroke read. This is a way to stuff a single\ncharacter into the input stream.",null,null],[7,"rl_dispatching","","Set to a non-zero value if a function is being called from a key binding; zero otherwise.\nApplication functions can test this to discover whether they were called directly or by\nReadline&#39;s dispatching mechanism.",null,null],[7,"rl_erase_empty_line","","Setting this to a non-zero value causes Readline to completely erase the current line,\nincluding any prompt, any time a newline is typed as the only character on an\notherwise-empty line. The cursor is moved to the beginning of the newly-blank line.",null,null],[7,"rl_prompt","","The prompt Readline uses. This is set from the argument to `readline()`, and should not be\nassigned to directly. The `rl_set_prompt()` function (see section [2.4.6 Redisplay]) may be\nused to modify the prompt string after calling `readline()`.\n[2.4.6 redisplay]: https://goo.gl/aTbhPU",null,null],[7,"rl_display_prompt","","The string displayed as the prompt. This is usually identical to `rl_prompt`, but may be\nchanged temporarily by functions that use the prompt string as a message area, such as\nincremental search.",null,null],[7,"rl_already_prompted","","If an application wishes to display the prompt itself, rather than have Readline do it the\nfirst time `readline()` is called, it should set this variable to a non-zero value after\ndisplaying the prompt. The prompt must also be passed as the argument to `readline()` so\nthe redisplay functions can update the display properly. The calling application is\nresponsible for managing the value; Readline never sets it.",null,null],[7,"rl_readline_version","","An integer encoding the current version of the library. The encoding is of the form 0xMMmm,\nwhere MM is the two-digit major version number, and mm is the two-digit minor version\nnumber. For example, for Readline-4.2, `rl_readline_version` would have the value 0x0402.",null,null],[7,"rl_gnu_readline_p","","Always set to 1, denoting that this is GNU readline rather than some emulation.",null,null],[7,"rl_terminal_name","","The terminal type, used for initialization. If not set by the application, Readline sets\nthis to the value of the TERM environment variable the first time it is called.",null,null],[7,"rl_readline_name","","This variable is set to a unique name by each application using Readline. The value allows\nconditional parsing of the inputrc file (see section\n[1.3.2 Conditional Init Constructs]).\n[1.3.2 conditional init constructs]: https://goo.gl/ENcVC5",null,null],[7,"rl_instream","","The stdio stream from which Readline reads input. If NULL, Readline defaults to stdin.",null,null],[7,"rl_outstream","","The stdio stream to which Readline performs output. If NULL, Readline defaults to stdout.",null,null],[7,"rl_prefer_env_winsize","","If non-zero, Readline gives values found in the LINES and COLUMNS environment variables\ngreater precedence than values fetched from the kernel when computing the screen dimensions.",null,null],[7,"rl_last_command_func","","The address of the last command function Readline executed. May be used to test whether or\nnot a function is being executed twice in succession, for example.",null,null],[7,"rl_startup_hook","","If non-zero, this is the address of a function to call just before `readline` prints the\nfirst prompt.",null,null],[7,"rl_pre_input_hook","","If non-zero, this is the address of a function to call after the first prompt has been\nprinted and just before `readline` starts reading input characters.",null,null],[7,"rl_event_hook","","If non-zero, this is the address of a function to call periodically when Readline is waiting\nfor terminal input. By default, this will be called at most ten times a second if there is\nno keyboard input.",null,null],[7,"rl_getc_function","","If non-zero, Readline will call indirectly through this pointer to get a character from the\ninput stream. By default, it is set to `rl_getc`, the default Readline character input\nfunction (see section [2.4.8 Character Input]). In general, an application that sets\n`rl_getc_function` should consider setting `rl_input_available_hook` as well.\n[2.4.8 character input]: https://goo.gl/olQQLc",null,null],[7,"rl_signal_event_hook","","If non-zero, this is the address of a function to call if a read system call is interrupted\nwhen Readline is reading terminal input.",null,null],[7,"rl_input_available_hook","","If non-zero, Readline will use this function&#39;s return value when it needs to determine\nwhether or not there is available input on the current input source. The default hook checks\n`rl_instream`; if an application is using a different input source, it should set the hook\nappropriately. Readline queries for available input when implementing intra-key-sequence\ntimeouts during input and incremental searches. This may use an application-specific timeout\nbefore returning a value; Readline uses the value passed to\n`rl_set_keyboard_input_timeout()` or the value of the user-settable `keyseq-timeout`\nvariable. This is designed for use by applications using Readline&#39;s callback interface (see\nsection [2.4.12 Alternate Interface]), which may not use the traditional `read(2)` and file\ndescriptor interface, or other applications using a different input mechanism. If an\napplication uses an input mechanism or hook that can potentially exceed the value of\n`keyseq-timeout`, it should increase the timeout or set this hook appropriately even when\nnot using the callback interface. In general, an application that sets `rl_getc_function`\nshould consider setting `rl_input_available_hook` as well.\n[2.4.12 alternate interface]: https://goo.gl/PHb4Kq",null,null],[7,"rl_redisplay_function","","If non-zero, Readline will call indirectly through this pointer to update the display with\nthe current contents of the editing buffer. By default, it is set to `rl_redisplay`, the\ndefault Readline redisplay function (see section [2.4.6 Redisplay]).\n[2.4.6 redisplay]: https://goo.gl/aTbhPU",null,null],[7,"rl_prep_term_function","","If non-zero, Readline will call indirectly through this pointer to initialize the terminal.\nThe function takes a single argument, an int flag that says whether or not to use eight-bit\ncharacters. By default, this is set to `rl_prep_terminal` (see section\n[2.4.9 Terminal Management]).\n[2.4.9 terminal management]: https://goo.gl/1xVE8y",null,null],[7,"rl_deprep_term_function","","If non-zero, Readline will call indirectly through this pointer to reset the terminal. This\nfunction should undo the effects of `rl_prep_term_function`. By default, this is set to\n`rl_deprep_terminal` (see section [2.4.9 Terminal Management]).\n[2.4.9 terminal management]: https://goo.gl/1xVE8y",null,null],[7,"rl_executing_keymap","","This variable is set to the keymap (see section [2.4.2 Selecting a Keymap]) in which the\ncurrently executing readline function was found.\n[2.4.2 selecting a keymap]: https://goo.gl/WMVvss",null,null],[7,"rl_binding_keymap","","This variable is set to the keymap (see section [2.4.2 Selecting a Keymap]) in which the\nlast key binding occurred.\n[2.4.2 selecting a keymap]: https://goo.gl/WMVvss",null,null],[7,"rl_executing_macro","","This variable is set to the text of any currently-executing macro.",null,null],[7,"rl_executing_key","","The key that caused the dispatch to the currently-executing Readline function.",null,null],[7,"rl_executing_keyseq","","The full key sequence that caused the dispatch to the currently-executing Readline function.",null,null],[7,"rl_key_sequence_length","","The number of characters in `rl_executing_keyseq`.",null,null],[7,"rl_explicit_arg","","Set to a non-zero value if an explicit numeric argument was specified by the user. Only\nvalid in a bindable command function.",null,null],[7,"rl_numeric_arg","","Set to the value of any numeric argument explicitly specified by the user before executing\nthe current Readline function. Only valid in a bindable command function.",null,null],[7,"rl_editing_mode","","Set to a value denoting Readline&#39;s current editing mode. A value of 1 means Readline is\ncurrently in emacs mode; 0 means that vi mode is active.",null,null],[17,"RL_STATE_NONE","","Readline has not yet been called, nor has it begun to initialize.",null,null],[17,"RL_STATE_INITIALIZING","","Readline is initializing its internal data structures.",null,null],[17,"RL_STATE_INITIALIZED","","Readline has completed its initialization.",null,null],[17,"RL_STATE_TERMPREPPED","","Readline has modified the terminal modes to do its own input and redisplay.",null,null],[17,"RL_STATE_READCMD","","Readline is reading a command from the keyboard.",null,null],[17,"RL_STATE_METANEXT","","Readline is reading more input after reading the meta-prefix character.",null,null],[17,"RL_STATE_DISPATCHING","","Readline is dispatching to a command.",null,null],[17,"RL_STATE_MOREINPUT","","Readline is reading more input while executing an editing command.",null,null],[17,"RL_STATE_ISEARCH","","Readline is performing an incremental history search.",null,null],[17,"RL_STATE_NSEARCH","","Readline is performing a non-incremental history search.",null,null],[17,"RL_STATE_SEARCH","","Readline is searching backward or forward through the history for a string.",null,null],[17,"RL_STATE_NUMERICARG","","Readline is reading a numeric argument.",null,null],[17,"RL_STATE_MACROINPUT","","Readline is currently getting its input from a previously-defined keyboard macro.",null,null],[17,"RL_STATE_MACRODEF","","Readline is currently reading characters defining a keyboard macro.",null,null],[17,"RL_STATE_OVERWRITE","","Readline is in overwrite mode.",null,null],[17,"RL_STATE_COMPLETING","","Readline is performing word completion.",null,null],[17,"RL_STATE_SIGHANDLER","","Readline is currently executing the readline signal handler.",null,null],[17,"RL_STATE_UNDOING","","Readline is performing an undo.",null,null],[17,"RL_STATE_INPUTPENDING","","Readline has input pending due to a call to `rl_execute_next()`.",null,null],[17,"RL_STATE_TTYCSAVED","","Readline has saved the values of the terminal&#39;s special characters.",null,null],[17,"RL_STATE_CALLBACK","","Readline is currently using the alternate (callback) interface (see section\n[2.4.12 Alternate Interface]).\n[2.4.12 alternate interface]: https://goo.gl/PHb4Kq",null,null],[17,"RL_STATE_VIMOTION","","Readline is reading the argument to a vi-mode &quot;motion&quot; command.",null,null],[17,"RL_STATE_MULTIKEY","","Readline is reading a multiple-keystroke command.",null,null],[17,"RL_STATE_VICMDONCE","","Readline has entered vi command (movement) mode at least one time during the current\ncall to `readline()`.",null,null],[17,"RL_STATE_DONE","","Readline has read a key sequence bound to `accept-line` and is about to return the line\nto the caller.",null,null],[11,"hash","","",12,null],[11,"cmp","","",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"readlinestate"}],"output":{"name":"readlinestate"}}],[11,"eq","","",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"readlinestate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",12,{"inputs":[],"output":{"name":"readlinestate"}}],[11,"all","","Returns the set containing all flags.",12,{"inputs":[],"output":{"name":"readlinestate"}}],[11,"bits","","Returns the raw value of the flags currently stored.",12,{"inputs":[{"name":"readlinestate"}],"output":{"name":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",12,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",12,{"inputs":[{"name":"i32"}],"output":{"name":"readlinestate"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,{"inputs":[{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",12,{"inputs":[{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"readlinestate"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"readlinestate"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"readlinestate"}}],[11,"sub","","Returns the set difference of the two sets of flags.",12,{"inputs":[{"name":"readlinestate"},{"name":"readlinestate"}],"output":{"name":"readlinestate"}}],[11,"not","","Returns the complement of this set of flags.",12,{"inputs":[{"name":"readlinestate"}],"output":{"name":"readlinestate"}}],[11,"from_iter","","",12,{"inputs":[{"name":"t"}],"output":{"name":"readlinestate"}}],[6,"CommandFunction","rl_sys::readline","Readline Command Function Type",null,null],[6,"HookFunction","","Readline Hook Function Type",null,null],[6,"GetcFunction","","Readline getc Function Type",null,null],[6,"VoidFunction","","Readline void Function Type",null,null],[6,"PrepFunction","","Readline prep Function Type",null,null],[6,"HandlerFunction","","Readline Callback Handler",null,null],[6,"KeymapEntryArray","","Keymap Entry Array",null,null],[6,"Keymap","","Keymap",null,null],[11,"fmt","","",5,{"inputs":[{"name":"iomarker"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"iomarker"}],"output":{"name":"self"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",6,{"inputs":[{"name":"iofile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"iofile"}],"output":{"name":"self"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",7,{"inputs":[{"name":"keymapentry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"keymapentry"}],"output":{"name":"self"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",8,{"inputs":[{"name":"readlinestate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"readlinestate"}],"output":{"name":"self"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",9,{"inputs":[{"name":"undolist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"undolist"}],"output":{"name":"self"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}]],"paths":[[3,"ReadlineError"],[3,"HistoryError"],[3,"HistoryEntry"],[3,"HistoryState"],[4,"Direction"],[3,"IOMarker"],[3,"IOFile"],[3,"KeymapEntry"],[3,"ReadlineState"],[3,"UndoList"],[4,"BindType"],[4,"UndoType"],[3,"ReadlineState"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"neg","","",4,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",4,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",4,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",4,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"timespec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"duration"}],"output":{"name":"timespec"}}],[11,"sub","","",0,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"duration"}}],[11,"clone","","",5,{"inputs":[{"name":"precisetime"}],"output":{"name":"precisetime"}}],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",5,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",5,{"inputs":[{"name":"precisetime"},{"name":"precisetime"}],"output":{"name":"duration"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",6,{"inputs":[{"name":"steadytime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"steadytime"}],"output":{"name":"duration"}}],[11,"sub","","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"add","","",6,{"inputs":[{"name":"steadytime"},{"name":"duration"}],"output":{"name":"steadytime"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"tm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"add","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","The resulting Tm is in UTC.",1,{"inputs":[{"name":"tm"},{"name":"duration"}],"output":{"name":"tm"}}],[11,"sub","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"duration"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"tm"},{"name":"tm"}],"output":{"name":"ordering"}}],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,{"inputs":[{"name":"tm"}],"output":{"name":"timespec"}}],[11,"to_local","","Convert time to the local timezone",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"to_utc","","Convert time to the UTC",1,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"strftime","","Formats the time according to the format string.",1,{"inputs":[{"name":"tm"},{"name":"str"}],"output":{"name":"result"}}],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,{"inputs":[{"name":"tm"}],"output":{"name":"tmfmt"}}],[11,"clone","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"fmt","","",3,{"inputs":[{"name":"tmfmt"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"shutdownloggererror"}],"output":{"name":"str"}}],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["errno"] = {"doc":"Cross-platform interface to the `errno` variable.","items":[[3,"Errno","errno","Wraps a platform-specific error code.",null,null],[12,"0","","",0,null],[5,"errno","","Returns the platform-specific value of `errno`.",null,{"inputs":[],"output":{"name":"errno"}}],[5,"set_errno","","Sets the platform-specific value of `errno`.",null,{"inputs":[{"name":"errno"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"errno"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"errno"},{"name":"errno"}],"output":{"name":"ordering"}}],[11,"clone","","",0,{"inputs":[{"name":"errno"}],"output":{"name":"errno"}}],[11,"fmt","","",0,{"inputs":[{"name":"errno"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Errno"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",12,null],[12,"sa_family","","",12,null],[12,"sa_data","","",12,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",13,null],[12,"sin6_family","","",13,null],[12,"sin6_port","","",13,null],[12,"sin6_flowinfo","","",13,null],[12,"sin6_addr","","",13,null],[12,"sin6_scope_id","","",13,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",14,null],[12,"sun_family","","",14,null],[12,"sun_path","","",14,null],[3,"passwd","","",null,null],[12,"pw_name","","",15,null],[12,"pw_passwd","","",15,null],[12,"pw_uid","","",15,null],[12,"pw_gid","","",15,null],[12,"pw_change","","",15,null],[12,"pw_class","","",15,null],[12,"pw_gecos","","",15,null],[12,"pw_dir","","",15,null],[12,"pw_shell","","",15,null],[12,"pw_expire","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_dstaddr","","",16,null],[12,"ifa_data","","",16,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",17,null],[12,"tm_min","","",17,null],[12,"tm_hour","","",17,null],[12,"tm_mday","","",17,null],[12,"tm_mon","","",17,null],[12,"tm_year","","",17,null],[12,"tm_wday","","",17,null],[12,"tm_yday","","",17,null],[12,"tm_isdst","","",17,null],[12,"tm_gmtoff","","",17,null],[12,"tm_zone","","",17,null],[3,"utsname","","",null,null],[12,"sysname","","",18,null],[12,"nodename","","",18,null],[12,"release","","",18,null],[12,"version","","",18,null],[12,"machine","","",18,null],[3,"msghdr","","",null,null],[12,"msg_name","","",19,null],[12,"msg_namelen","","",19,null],[12,"msg_iov","","",19,null],[12,"msg_iovlen","","",19,null],[12,"msg_control","","",19,null],[12,"msg_controllen","","",19,null],[12,"msg_flags","","",19,null],[3,"fsid_t","","",null,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",20,null],[12,"gl_offs","","",20,null],[12,"gl_pathv","","",20,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",21,null],[12,"ss_family","","",21,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",22,null],[12,"ai_family","","",22,null],[12,"ai_socktype","","",22,null],[12,"ai_protocol","","",22,null],[12,"ai_addrlen","","",22,null],[12,"ai_canonname","","",22,null],[12,"ai_addr","","",22,null],[12,"ai_next","","",22,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",23,null],[12,"denom","","",23,null],[3,"stat","","",null,null],[12,"st_dev","","",24,null],[12,"st_mode","","",24,null],[12,"st_nlink","","",24,null],[12,"st_ino","","",24,null],[12,"st_uid","","",24,null],[12,"st_gid","","",24,null],[12,"st_rdev","","",24,null],[12,"st_atime","","",24,null],[12,"st_atime_nsec","","",24,null],[12,"st_mtime","","",24,null],[12,"st_mtime_nsec","","",24,null],[12,"st_ctime","","",24,null],[12,"st_ctime_nsec","","",24,null],[12,"st_birthtime","","",24,null],[12,"st_birthtime_nsec","","",24,null],[12,"st_size","","",24,null],[12,"st_blocks","","",24,null],[12,"st_blksize","","",24,null],[12,"st_flags","","",24,null],[12,"st_gen","","",24,null],[12,"st_lspare","","",24,null],[12,"st_qspare","","",24,null],[3,"dirent","","",null,null],[12,"d_ino","","",25,null],[12,"d_seekoff","","",25,null],[12,"d_reclen","","",25,null],[12,"d_namlen","","",25,null],[12,"d_type","","",25,null],[12,"d_name","","",25,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",26,null],[12,"si_errno","","",26,null],[12,"si_code","","",26,null],[12,"si_pid","","",26,null],[12,"si_uid","","",26,null],[12,"si_status","","",26,null],[12,"si_addr","","",26,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",27,null],[12,"sa_mask","","",27,null],[12,"sa_flags","","",27,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",28,null],[12,"ss_size","","",28,null],[12,"ss_flags","","",28,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",29,null],[12,"fst_posmode","","",29,null],[12,"fst_offset","","",29,null],[12,"fst_length","","",29,null],[12,"fst_bytesalloc","","",29,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",30,null],[12,"ra_count","","",30,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",31,null],[12,"f_frsize","","",31,null],[12,"f_blocks","","",31,null],[12,"f_bfree","","",31,null],[12,"f_bavail","","",31,null],[12,"f_files","","",31,null],[12,"f_ffree","","",31,null],[12,"f_favail","","",31,null],[12,"f_fsid","","",31,null],[12,"f_flag","","",31,null],[12,"f_namemax","","",31,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",32,null],[12,"dli_fbase","","",32,null],[12,"dli_sname","","",32,null],[12,"dli_saddr","","",32,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",33,null],[12,"sin_family","","",33,null],[12,"sin_port","","",33,null],[12,"sin_addr","","",33,null],[12,"sin_zero","","",33,null],[3,"statfs","","",null,null],[12,"f_bsize","","",34,null],[12,"f_iosize","","",34,null],[12,"f_blocks","","",34,null],[12,"f_bfree","","",34,null],[12,"f_bavail","","",34,null],[12,"f_files","","",34,null],[12,"f_ffree","","",34,null],[12,"f_fsid","","",34,null],[12,"f_owner","","",34,null],[12,"f_type","","",34,null],[12,"f_flags","","",34,null],[12,"f_fssubtype","","",34,null],[12,"f_fstypename","","",34,null],[12,"f_mntonname","","",34,null],[12,"f_mntfromname","","",34,null],[12,"f_reserved","","",34,null],[3,"kevent","","",null,null],[12,"ident","","",35,null],[12,"filter","","",35,null],[12,"flags","","",35,null],[12,"fflags","","",35,null],[12,"data","","",35,null],[12,"udata","","",35,null],[3,"kevent64_s","","",null,null],[12,"ident","","",36,null],[12,"filter","","",36,null],[12,"flags","","",36,null],[12,"fflags","","",36,null],[12,"data","","",36,null],[12,"udata","","",36,null],[12,"ext","","",36,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",37,null],[12,"dqb_bsoftlimit","","",37,null],[12,"dqb_curbytes","","",37,null],[12,"dqb_ihardlimit","","",37,null],[12,"dqb_isoftlimit","","",37,null],[12,"dqb_curinodes","","",37,null],[12,"dqb_btime","","",37,null],[12,"dqb_itime","","",37,null],[12,"dqb_id","","",37,null],[12,"dqb_spare","","",37,null],[3,"termios","","",null,null],[12,"c_iflag","","",38,null],[12,"c_oflag","","",38,null],[12,"c_cflag","","",38,null],[12,"c_lflag","","",38,null],[12,"c_cc","","",38,null],[12,"c_ispeed","","",38,null],[12,"c_ospeed","","",38,null],[3,"flock","","",null,null],[12,"l_start","","",39,null],[12,"l_len","","",39,null],[12,"l_pid","","",39,null],[12,"l_type","","",39,null],[12,"l_whence","","",39,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",40,null],[12,"hdr_cnt","","",40,null],[12,"trailers","","",40,null],[12,"trl_cnt","","",40,null],[3,"pthread_attr_t","","",null,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"select","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwuid_r","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"shm_open","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",41,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",41,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",41,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",41,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",41,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",41,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",41,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",41,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",41,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",41,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",41,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",41,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",41,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",41,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",41,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",41,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",41,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",41,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",41,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",41,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",41,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",41,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",41,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"eq","","",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"cmp","","",41,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"fmt","","",41,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",41,null],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",42,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",42,null],[11,"clone","libc","",43,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",20,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",21,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",22,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",23,{"inputs":[{"name":"mach_timebase_info"}],"output":{"name":"mach_timebase_info"}}],[11,"clone","","",24,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",25,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",44,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",45,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",46,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",47,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",26,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",27,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",28,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",29,{"inputs":[{"name":"fstore_t"}],"output":{"name":"fstore_t"}}],[11,"clone","","",30,{"inputs":[{"name":"radvisory"}],"output":{"name":"radvisory"}}],[11,"clone","","",31,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",32,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",33,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",34,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",35,{"inputs":[{"name":"kevent"}],"output":{"name":"kevent"}}],[11,"clone","","",36,{"inputs":[{"name":"kevent64_s"}],"output":{"name":"kevent64_s"}}],[11,"clone","","",37,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",38,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",39,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",40,{"inputs":[{"name":"sf_hdtr"}],"output":{"name":"sf_hdtr"}}],[11,"clone","","",12,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",15,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",48,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",17,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",18,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",19,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",49,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"CTL_HW","","",null,null],[17,"HW_NCPU","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NCCS","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"WNOHANG","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_SYSCOUNT","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_REPARENTED","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_REAP","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[4,"Option"],[8,"Clone"],[3,"pthread_attr_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_rwlock_t"],[3,"fd_set"],[3,"fsid_t"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["blastfig"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags!","blastfig","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
