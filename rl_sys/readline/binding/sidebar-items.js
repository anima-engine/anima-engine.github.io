initSidebarItems({"enum":[["BindType","Use for calls to `generic_bind`."]],"fn":[["bind_key","Binds `key` to `f` in the currently active keymap. Returns non-zero in the case of an invalid key."],["bind_key_if_unbound","Binds `key` to function `f` if it is not already bound in the currently active keymap. Returns non-zero in the case of an invalid `key` or if `key` is already bound."],["bind_key_if_unbound_in_map","Binds `key` to function `f` if it is not already bound in `map`. Returns non-zero in the case of an invalid `key` or if `key` is already bound."],["bind_key_in_map","Bind `key` to function `f` in `map`. Returns non-zero in the case of an invalid key."],["bind_keyseq","Bind the key sequence represented by the string `keyseq` to the function `f`, beginning in the current keymap. This makes new keymaps as necessary. The return value is non-zero if `keyseq` is invalid."],["bind_keyseq_if_unbound","Binds `keyseq` to function `f` if it is not already bound in the currently active keymap. Returns non-zero in the case of an invalid `keyseq` or if `keyseq` is already bound."],["bind_keyseq_if_unbound_in_map","Binds `keyseq` to function `f` if it is not already bound in map. Returns non-zero in the case of an invalid `keyseq` or if `keyseq` is already bound."],["bind_keyseq_in_map","Bind the key sequence represented by the string `keyseq` to the function `f`. This makes new keymaps as necessary. Initial bindings are performed in `map`. The return value is non-zero if keyseq is invalid."],["generic_bind","Bind the key sequence represented by the string `keyseq` to the function `f`. type says what kind of data is pointed to by data; this can be a function (IsFunc), a macro (IsMacr), or a keymap (IsKmap). This makes new keymaps as necessary. The initial keymap in which to do bindings is `map`."],["parse_and_bind","Parse `line` as if it had been read from the `inputrc` file and perform any key bindings and variable assignments found (see section [1.3 Readline Init File]). [1.3 readline init file]: https://goo.gl/VtaCdx"],["read_init_file","Read keybindings and variable assignments from `path` (see section [1.3 Readline Init File]). [1.3 readline init file]: https://goo.gl/VtaCdx"],["set_key","Equivalent to `rl_bind_keyseq_in_map`."],["unbind_command_in_map","Unbind all keys that are bound to `cmd` in map."],["unbind_function_in_map","Unbind all keys that execute function in map."],["unbind_key","Bind `key` to the null function in the currently active keymap. Returns non-zero in case of error. Binds `key` to function `f` if it is not already bound in `map`. Returns non-zero in the case of an invalid `key` or if `key` is already bound."],["unbind_key_in_map","Bind `key` to the null function in `map`. Returns non-zero in case of error."]],"type":[["BindResult","Result type returned by all binding functions."]]});